# -*- coding: utf-8 -*-
# @Time    : 8/26/2021 08:20 PM
# @Author  : Rodolfo Londero
# @Email   : rodolfpl@gmail.com
# @File    : test_monitors.py
# @Software: PyCharm


import os

import pytest

path = os.path.dirname(os.path.abspath(__file__))


class TestMonitors13Bus:

    @pytest.fixture(scope='function')
    def dss(self, solve_snap_13bus):
        dss = solve_snap_13bus
        dss.text(
            "New Loadshape.1 npts=24 interval=1 mult=(0.18000001 0.19000000 0.23999999 0.33000001 0.38999999 0.41000000 0.64999998 1.23000002 1.88999999 1.88999999 1.96000004 1.98000002 1.45000005 1.62000000 1.88999999 1.79999995 1.78999996 1.19000006 0.80000001 0.66000003 0.51999998 0.40000001 0.28000000 0.23000000)")
        dss.text("batchedit load..* daily=1")
        dss.text("New monitor.m1 element=Transformer.XFM1 terminal=1 mode=0")
        dss.text(f"Set DataPath={path}")
        dss.text("Set maxcontrol=100")
        dss.text("Set maxiterations=100")
        dss.text("Set controlmode=off")
        dss.text("Set mode=daily stepsize=1.0h number=24")

        dss.solution_solve()

        return dss

    # ===================================================================
    # Integer methods
    # ===================================================================
    def test_monitors_first(self, dss):
        expected = 1
        actual = dss.monitors_first()
        assert actual == expected

    def test_monitors_next(self, dss):
        expected = 0
        actual = dss.monitors_next()
        assert actual == expected

    def test_monitors_count(self, dss):
        expected = 1
        actual = dss.monitors_count()
        assert actual == expected

    def test_monitors_reset(self, dss):
        expected = 0
        actual = dss.monitors_reset()
        assert actual == expected

    def test_monitors_reset_all(self, dss):
        expected = 0
        actual = dss.monitors_reset_all()
        assert actual == expected

    def test_monitors_sample(self, dss):
        expected = 0
        actual = dss.monitors_sample()
        assert actual == expected

    def test_monitors_sample_all(self, dss):
        expected = 0
        actual = dss.monitors_sample_all()
        assert actual == expected

    def test_monitors_save(self, dss):
        expected = 0
        actual = dss.monitors_save()
        assert actual == expected

    def test_monitors_save_all(self, dss):
        expected = 0
        actual = dss.monitors_save_all()
        assert actual == expected

    def test_monitors_process(self, dss):
        expected = 0
        actual = dss.monitors_process()
        assert actual == expected

    def test_monitors_process_all(self, dss):
        expected = 0
        actual = dss.monitors_process_all()
        assert actual == expected

    def test_monitors_file_version(self, dss):
        # TODO: file_version returns diferent values each time
        expected = 0
        actual = dss.monitors_file_version()
        assert type(actual) == type(expected)

    def test_monitors_sample_count(self, dss):
        expected = 24
        actual = dss.monitors_sample_count()
        assert actual == expected

    def test_monitors_record_size(self, dss):
        expected = 16
        actual = dss.monitors_record_size()
        assert actual == expected

    def test_monitors_num_channels(self, dss):
        expected = 16
        actual = dss.monitors_num_channels()
        assert actual == expected

    def test_monitors_read_terminal(self, dss):
        expected = 1
        actual = dss.monitors_read_terminal()
        assert actual == expected

    def test_monitors_write_terminal(self, dss):
        expected = 2
        dss.monitors_write_terminal(expected)
        actual = dss.monitors_read_terminal()
        assert actual == expected

    # ===================================================================
    # String methods
    # ===================================================================
    def test_monitors_file_name(self, dss):
        expected = os.path.join(path, "IEEE13Nodeckt_Mon_m1_1.csv")
        actual = dss.monitors_file_name()
        assert expected.lower() == actual.lower()

    def test_monitors_read_name(self, dss):
        expected = "m1"
        actual = dss.monitors_read_name()
        assert expected.lower() == actual.lower()

    def test_monitors_write_name(self, dss):
        dss.text("New monitor.m2 element=Transformer.XFM1 terminal=2 mode=0")
        expected = "m2"
        dss.monitors_write_name(expected)
        actual = dss.monitors_read_name()
        assert expected.lower() == actual.lower()

    def test_monitors_read_element(self, dss):
        expected = "transformer.xfm1"
        actual = dss.monitors_read_element()
        assert actual == expected

    def test_monitors_write_element(self, dss):
        expected = "load.671"
        dss.monitors_write_element(expected)
        actual = dss.monitors_read_element()
        assert actual == expected

    # ===================================================================
    # Variant methods
    # ===================================================================
    def test_monitors_all_names(self, dss):
        dss.text("New monitor.m2 element=Transformer.XFM1 terminal=2 mode=0")
        expected = ["m1", "m2"]
        actual = dss.monitors_all_names()
        assert actual == expected

    def test_monitors_byte_stream(self, dss):
        expected = [1.0,
                    0.0,
                    2534.394775390625,
                    -0.4675525426864624,
                    2499.30126953125,
                    -120.44959259033203,
                    2547.39013671875,
                    119.32565307617188,
                    0.0,
                    0.0,
                    13.886494636535645,
                    -35.08768081665039,
                    10.83706283569336,
                    -157.40060424804688,
                    10.791746139526367,
                    82.37649536132812,
                    3.1442599296569824,
                    152.5272674560547,
                    2.0,
                    0.0,
                    2533.2353515625,
                    -0.49209707975387573,
                    2498.910888671875,
                    -120.4657211303711,
                    2545.78076171875,
                    119.30664825439453,
                    0.0,
                    0.0,
                    14.64810562133789,
                    -35.118377685546875,
                    11.442634582519531,
                    -157.4212646484375,
                    11.382158279418945,
                    82.35310363769531,
                    3.31020450592041,
                    152.29312133789062,
                    3.0,
                    0.0,
                    2527.386474609375,
                    -0.614780843257904,
                    2496.921875,
                    -120.54707336425781,
                    2537.780029296875,
                    119.21283721923828,
                    0.0,
                    0.0,
                    18.532306671142578,
                    -35.272499084472656,
                    14.477212905883789,
                    -157.5250244140625,
                    14.320079803466797,
                    82.23729705810547,
                    4.216956615447998,
                    150.9557342529297,
                    4.0,
                    0.0,
                    2516.510986328125,
                    -0.8386349678039551,
                    2493.407470703125,
                    -120.69585418701172,
                    2523.439697265625,
                    119.0489501953125,
                    0.0,
                    0.0,
                    25.645954132080078,
                    -35.554283142089844,
                    19.96762466430664,
                    -157.7151641845703,
                    19.727214813232422,
                    82.03313446044922,
                    5.910104751586914,
                    150.0835418701172,
                    5.0,
                    0.0,
                    2509.140625,
                    -0.9908443093299866,
                    2491.08349609375,
                    -120.79377746582031,
                    2513.5654296875,
                    118.93621826171875,
                    0.0,
                    0.0,
                    30.440006256103516,
                    -35.745872497558594,
                    23.645559310913086,
                    -157.8407440185547,
                    23.430818557739258,
                    81.8924789428711,
                    7.044726371765137,
                    150.1644744873047,
                    6.0,
                    0.0,
                    2506.676025390625,
                    -1.0419105291366577,
                    2490.30224609375,
                    -120.82642364501953,
                    2510.20849609375,
                    118.89804077148438,
                    0.0,
                    0.0,
                    32.04770278930664,
                    -35.81032180786133,
                    24.874866485595703,
                    -157.88265991210938,
                    24.674585342407227,
                    81.84481048583984,
                    7.427519798278809,
                    150.196533203125,
                    7.0,
                    0.0,
                    2476.283447265625,
                    -1.6619904041290283,
                    2480.81591796875,
                    -121.22080993652344,
                    2469.010498046875,
                    118.43807983398438,
                    0.0,
                    0.0,
                    51.73030090332031,
                    -36.59507751464844,
                    39.76101303100586,
                    -158.3895721435547,
                    39.95520782470703,
                    81.26647186279297,
                    12.204874038696289,
                    150.60157775878906,
                    8.0,
                    0.0,
                    2393.9775390625,
                    -3.210886240005493,
                    2457.153076171875,
                    -122.23333740234375,
                    2364.864013671875,
                    117.36490631103516,
                    0.0,
                    0.0,
                    102.89160919189453,
                    -38.59267044067383,
                    76.82025909423828,
                    -159.68594360351562,
                    79.96876525878906,
                    79.86441802978516,
                    25.51802635192871,
                    151.6171417236328,
                    9.0,
                    0.0,
                    2310.507568359375,
                    -4.398284912109375,
                    2412.541259765625,
                    -123.57606506347656,
                    2268.54296875,
                    116.38440704345703,
                    0.0,
                    0.0,
                    154.65989685058594,
                    -40.26875305175781,
                    121.96656799316406,
                    -161.38763427734375,
                    118.40449523925781,
                    78.54100799560547,
                    34.572635650634766,
                    138.62701416015625,
                    10.0,
                    0.0,
                    2310.524169921875,
                    -4.398401260375977,
                    2412.5380859375,
                    -123.5758285522461,
                    2268.532470703125,
                    116.3841552734375,
                    0.0,
                    0.0,
                    154.6577911376953,
                    -40.267417907714844,
                    121.96685791015625,
                    -161.3881072998047,
                    118.40723419189453,
                    78.54105377197266,
                    34.567989349365234,
                    138.63720703125,
                    11.0,
                    0.0,
                    2302.3828125,
                    -4.493913173675537,
                    2407.30810546875,
                    -123.71868896484375,
                    2259.47021484375,
                    116.2895736694336,
                    0.0,
                    0.0,
                    159.44032287597656,
                    -40.412174224853516,
                    126.96470642089844,
                    -161.57260131835938,
                    122.0555648803711,
                    78.41449737548828,
                    34.93585968017578,
                    136.77281188964844,
                    12.0,
                    0.0,
                    2300.047119140625,
                    -4.521917819976807,
                    2405.859619140625,
                    -123.7580337524414,
                    2256.939697265625,
                    116.26361846923828,
                    0.0,
                    0.0,
                    160.81239318847656,
                    -40.45142364501953,
                    128.4037628173828,
                    -161.62168884277344,
                    123.0972671508789,
                    78.37442016601562,
                    35.059940338134766,
                    136.2418670654297,
                    13.0,
                    0.0,
                    2364.290283203125,
                    -3.6779022216796875,
                    2444.14013671875,
                    -122.66362762451172,
                    2330.05126953125,
                    117.01066589355469,
                    0.0,
                    0.0,
                    123.23202514648438,
                    -39.24274444580078,
                    91.46308898925781,
                    -160.23033142089844,
                    94.49983215332031,
                    79.38150787353516,
                    31.202787399291992,
                    149.1248016357422,
                    14.0,
                    0.0,
                    2343.041748046875,
                    -3.9827802181243896,
                    2432.151611328125,
                    -123.0114517211914,
                    2305.616455078125,
                    116.75981903076172,
                    0.0,
                    0.0,
                    135.64791870117188,
                    -39.66999816894531,
                    103.06294250488281,
                    -160.67172241210938,
                    103.95246887207031,
                    79.05131530761719,
                    32.73149871826172,
                    145.276611328125,
                    15.0,
                    0.0,
                    2310.536376953125,
                    -4.398876190185547,
                    2412.541259765625,
                    -123.57557678222656,
                    2268.513916015625,
                    116.38409423828125,
                    0.0,
                    0.0,
                    154.659423828125,
                    -40.265220642089844,
                    121.96846771240234,
                    -161.38818359375,
                    118.41059112548828,
                    78.54010009765625,
                    34.56859588623047,
                    138.65135192871094,
                    16.0,
                    0.0,
                    2321.1630859375,
                    -4.269679069519043,
                    2419.20751953125,
                    -123.38628387451172,
                    2280.66259765625,
                    116.50746154785156,
                    0.0,
                    0.0,
                    148.422607421875,
                    -40.07623291015625,
                    115.59974670410156,
                    -161.14646911621094,
                    113.66673278808594,
                    78.7066650390625,
                    34.03871536254883,
                    140.94723510742188,
                    17.0,
                    0.0,
                    2322.334228515625,
                    -4.2543158531188965,
                    2419.93115234375,
                    -123.36567687988281,
                    2282.03857421875,
                    116.52161407470703,
                    0.0,
                    0.0,
                    147.72317504882812,
                    -40.05790328979492,
                    114.89653015136719,
                    -161.11962890625,
                    113.13187408447266,
                    78.7246322631836,
                    33.97745895385742,
                    141.1783905029297,
                    18.0,
                    0.0,
                    2400.434814453125,
                    -3.1055073738098145,
                    2458.822021484375,
                    -122.1529541015625,
                    2371.550537109375,
                    117.42601776123047,
                    0.0,
                    0.0,
                    99.15918731689453,
                    -38.44755172729492,
                    74.21483612060547,
                    -159.5876007080078,
                    77.0750732421875,
                    79.95426177978516,
                    24.495691299438477,
                    151.60772705078125,
                    19.0,
                    0.0,
                    2456.455078125,
                    -2.0572500228881836,
                    2474.794921875,
                    -121.46990203857422,
                    2442.3251953125,
                    118.14884948730469,
                    0.0,
                    0.0,
                    64.43167877197266,
                    -37.09913635253906,
                    49.19365310668945,
                    -158.71046447753906,
                    49.868736267089844,
                    80.89836120605469,
                    15.385862350463867,
                    150.8886260986328,
                    20.0,
                    0.0,
                    2474.9755859375,
                    -1.6882458925247192,
                    2480.419189453125,
                    -121.23733520507812,
                    2467.244384765625,
                    118.41881561279297,
                    0.0,
                    0.0,
                    52.5706787109375,
                    -36.63013458251953,
                    40.386268615722656,
                    -158.41079711914062,
                    40.61094284057617,
                    81.24107360839844,
                    12.41498851776123,
                    150.6299285888672,
                    21.0,
                    0.0,
                    2492.93603515625,
                    -1.3244341611862183,
                    2485.979736328125,
                    -121.00654602050781,
                    2491.53564453125,
                    118.68760681152344,
                    0.0,
                    0.0,
                    40.978599548339844,
                    -36.16801071166992,
                    31.66644859313965,
                    -158.11395263671875,
                    31.59662628173828,
                    81.58069610595703,
                    9.574596405029297,
                    150.38372802734375,
                    22.0,
                    0.0,
                    2507.907958984375,
                    -1.0164040327072144,
                    2490.69384765625,
                    -120.8100814819336,
                    2511.88525390625,
                    118.9171142578125,
                    0.0,
                    0.0,
                    31.244247436523438,
                    -35.77863311767578,
                    24.259836196899414,
                    -157.8616485595703,
                    24.053298950195312,
                    81.86833953857422,
                    7.236617565155029,
                    150.18698120117188,
                    23.0,
                    0.0,
                    2522.62890625,
                    -0.713349461555481,
                    2495.336669921875,
                    -120.61292266845703,
                    2531.42138671875,
                    119.13958740234375,
                    0.0,
                    0.0,
                    21.683483123779297,
                    -35.3968505859375,
                    16.913930892944336,
                    -157.60939025878906,
                    16.670665740966797,
                    82.14678955078125,
                    4.980693817138672,
                    150.026123046875,
                    24.0,
                    0.0,
                    2528.55908203125,
                    -0.5903281569480896,
                    2497.32080078125,
                    -120.53076171875,
                    2539.37451171875,
                    119.2314453125,
                    0.0,
                    0.0,
                    17.751964569091797,
                    -35.242000579833984,
                    13.870926856994629,
                    -157.50465393066406,
                    13.734419822692871,
                    82.26070404052734,
                    4.0307440757751465,
                    151.2092742919922]

        dss.monitors_save()

        actual = list()
        for i in dss.monitors_byte_stream().values.tolist():
            for j in i:
                actual.append(j)

        assert actual == expected

    def test_monitors_header(self, dss):
        expected = [' V1', ' VAngle1', ' V2', ' VAngle2', ' V3', ' VAngle3', ' V4', ' VAngle4',
                    ' I1', ' IAngle1', ' I2', ' IAngle2', ' I3', ' IAngle3', ' I4', ' IAngle4\x00']
        actual = dss.monitors_header()
        assert actual == expected

    def test_monitors_dbl_hour(self, dss):
        expected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
        actual = dss.monitors_dbl_hour()
        assert actual == expected

    def test_monitors_dbl_freq(self, dss):
        expected = [0.0]
        actual = dss.monitors_dbl_freq()
        assert actual == expected

    def test_monitors_channel(self, dss):
        expected = [2534.39,
                    2533.24,
                    2527.39,
                    2516.51,
                    2509.14,
                    2506.68,
                    2476.28,
                    2393.98,
                    2310.51,
                    2310.52,
                    2302.38,
                    2300.05,
                    2364.29,
                    2343.04,
                    2310.54,
                    2321.16,
                    2322.33,
                    2400.43,
                    2456.46,
                    2474.98,
                    2492.94,
                    2507.91,
                    2522.63,
                    2528.56]
        # dss.monitors_save_all()
        actual = dss.monitors_channel(1)
        assert [round(value, 2) for value in actual] == [round(value, 2) for value in expected]
