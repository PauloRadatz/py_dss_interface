# -*- coding: utf-8 -*-
# @Time    : 8/26/2021 08:20 PM
# @Author  : Rodolfo Londero
# @Email   : rodolfpl@gmail.com
# @File    : test_monitors.py
# @Software: PyCharm


import os

import pytest

path = os.path.dirname(os.path.abspath(__file__))


class TestMonitors13Bus:

    @pytest.fixture(scope='function')
    def dss(self, solve_snap_13bus):
        dss = solve_snap_13bus
        dss.text(
            "New Loadshape.1 npts=24 interval=1 mult=(0.18000001 0.19000000 0.23999999 0.33000001 0.38999999 0.41000000 0.64999998 1.23000002 1.88999999 1.88999999 1.96000004 1.98000002 1.45000005 1.62000000 1.88999999 1.79999995 1.78999996 1.19000006 0.80000001 0.66000003 0.51999998 0.40000001 0.28000000 0.23000000)")
        dss.loads_write_daily("1")
        dss.text("New monitor.m1 element=Transformer.XFM1 terminal=1 mode=0")
        dss.text(f"Set DataPath={path}")
        dss.text("Set maxcontrol=100")
        dss.text("Set maxiterations=100")
        dss.text("Set controlmode=off")
        dss.text("Set mode=daily stepsize=1.0h number=24")

        dss.solution_solve()

        return dss

    # ===================================================================
    # Integer methods
    # ===================================================================
    def test_monitors_first(self, dss):
        expected = 1
        actual = dss.monitors_first()
        assert actual == expected

    def test_monitors_next(self, dss):
        expected = 0
        actual = dss.monitors_next()
        assert actual == expected

    def test_monitors_count(self, dss):
        expected = 1
        actual = dss.monitors_count()
        assert actual == expected

    def test_monitors_reset(self, dss):
        expected = 0
        actual = dss.monitors_reset()
        assert actual == expected

    def test_monitors_reset_all(self, dss):
        expected = 0
        actual = dss.monitors_reset_all()
        assert actual == expected

    def test_monitors_sample(self, dss):
        expected = 0
        actual = dss.monitors_sample()
        assert actual == expected

    def test_monitors_sample_all(self, dss):
        expected = 0
        actual = dss.monitors_sample_all()
        assert actual == expected

    def test_monitors_save(self, dss):
        expected = 0
        actual = dss.monitors_save()
        assert actual == expected

    def test_monitors_save_all(self, dss):
        expected = 0
        actual = dss.monitors_save_all()
        assert actual == expected

    def test_monitors_process(self, dss):
        expected = 0
        actual = dss.monitors_process()
        assert actual == expected

    def test_monitors_process_all(self, dss):
        expected = 0
        actual = dss.monitors_process_all()
        assert actual == expected

    def test_monitors_file_version(self, dss):
        # TODO: file_version returns diferent values each time
        expected = 0
        actual = dss.monitors_file_version()
        assert type(actual) == type(expected)

    def test_monitors_sample_count(self, dss):
        expected = 24
        actual = dss.monitors_sample_count()
        assert actual == expected

    def test_monitors_record_size(self, dss):
        expected = 16
        actual = dss.monitors_record_size()
        assert actual == expected

    def test_monitors_num_channels(self, dss):
        expected = 16
        actual = dss.monitors_num_channels()
        assert actual == expected

    def test_monitors_read_terminal(self, dss):
        expected = 1
        actual = dss.monitors_read_terminal()
        assert actual == expected

    def test_monitors_write_terminal(self, dss):
        expected = 2
        dss.monitors_write_terminal(expected)
        actual = dss.monitors_read_terminal()
        assert actual == expected

    # ===================================================================
    # String methods
    # ===================================================================
    def test_monitors_file_name(self, dss):
        expected = os.path.join(path, "IEEE13Nodeckt_Mon_m1_1.csv")
        actual = dss.monitors_file_name()
        assert expected.lower() == actual.lower()

    def test_monitors_read_name(self, dss):
        expected = "m1"
        actual = dss.monitors_read_name()
        assert expected.lower() == actual.lower()

    def test_monitors_write_name(self, dss):
        dss.text("New monitor.m2 element=Transformer.XFM1 terminal=2 mode=0")
        expected = "m2"
        dss.monitors_write_name(expected)
        actual = dss.monitors_read_name()
        assert expected.lower() == actual.lower()

    def test_monitors_read_element(self, dss):
        expected = "transformer.xfm1"
        actual = dss.monitors_read_element()
        assert actual == expected

    def test_monitors_write_element(self, dss):
        expected = "load.671"
        dss.monitors_write_element(expected)
        actual = dss.monitors_read_element()
        assert actual == expected

    # ===================================================================
    # Variant methods
    # ===================================================================
    def test_monitors_all_names(self, dss):
        dss.text("New monitor.m2 element=Transformer.XFM1 terminal=2 mode=0")
        expected = ["m1", "m2"]
        actual = dss.monitors_all_names()
        assert actual == expected

    def test_monitors_byte_stream(self, dss):
        expected = [1.0,
                    0.0,
                    2421.032958984375,
                    -2.5194218158721924,
                    2467.319580078125,
                    -121.98499298095703,
                    2422.077392578125,
                    118.06021881103516,
                    0.0,
                    0.0,
                    82.16883087158203,
                    -37.71772384643555,
                    61.92159652709961,
                    -159.32273864746094,
                    63.10887145996094,
                    80.70458221435547,
                    19.873666763305664,
                    150.27822875976562,
                    2.0,
                    0.0,
                    2421.12158203125,
                    -2.5206751823425293,
                    2467.323486328125,
                    -121.98263549804688,
                    2421.860595703125,
                    118.05652618408203,
                    0.0,
                    0.0,
                    82.17193603515625,
                    -37.71906280517578,
                    61.91512680053711,
                    -159.3203582763672,
                    63.12103271484375,
                    80.70074462890625,
                    19.88230323791504,
                    150.3182373046875,
                    3.0,
                    0.0,
                    2421.58935546875,
                    -2.5252315998077393,
                    2467.284423828125,
                    -121.97191619873047,
                    2420.875244140625,
                    118.03871154785156,
                    0.0,
                    0.0,
                    82.15982818603516,
                    -37.72339630126953,
                    61.91515350341797,
                    -159.30963134765625,
                    63.1424674987793,
                    80.68260192871094,
                    19.889633178710938,
                    150.36196899414062,
                    4.0,
                    0.0,
                    2422.460693359375,
                    -2.5332205295562744,
                    2467.201416015625,
                    -121.9522705078125,
                    2419.063720703125,
                    118.00578308105469,
                    0.0,
                    0.0,
                    82.12503814697266,
                    -37.730838775634766,
                    61.917869567871094,
                    -159.2900390625,
                    63.196617126464844,
                    80.64886474609375,
                    19.884401321411133,
                    150.48419189453125,
                    5.0,
                    0.0,
                    2423.02392578125,
                    -2.538707971572876,
                    2467.155517578125,
                    -121.93936920166016,
                    2417.876708984375,
                    117.98434448242188,
                    0.0,
                    0.0,
                    82.10989379882812,
                    -37.73604965209961,
                    61.9183235168457,
                    -159.27713012695312,
                    63.222328186035156,
                    80.62702941894531,
                    19.892532348632812,
                    150.53587341308594,
                    6.0,
                    0.0,
                    2423.2265625,
                    -2.540426254272461,
                    2467.13330078125,
                    -121.93489837646484,
                    2417.46240234375,
                    117.97677612304688,
                    0.0,
                    0.0,
                    82.09835052490234,
                    -37.73760223388672,
                    61.91970443725586,
                    -159.27268981933594,
                    63.23896789550781,
                    80.61920928955078,
                    19.88599395751953,
                    150.57594299316406,
                    7.0,
                    0.0,
                    2425.528076171875,
                    -2.562317371368408,
                    2466.938720703125,
                    -121.88252258300781,
                    2412.630126953125,
                    117.88947296142578,
                    0.0,
                    0.0,
                    82.01913452148438,
                    -37.75818634033203,
                    61.923858642578125,
                    -159.2203826904297,
                    63.36849594116211,
                    80.52996063232422,
                    19.892717361450195,
                    150.85919189453125,
                    8.0,
                    0.0,
                    2431.144775390625,
                    -2.6163768768310547,
                    2466.506103515625,
                    -121.7544174194336,
                    2400.7734375,
                    117.67646026611328,
                    0.0,
                    0.0,
                    81.8173599243164,
                    -37.808963775634766,
                    61.935848236083984,
                    -159.0924530029297,
                    63.69684600830078,
                    80.31195831298828,
                    19.899921417236328,
                    151.58131408691406,
                    9.0,
                    0.0,
                    2437.58837890625,
                    -2.6804232597351074,
                    2466.105712890625,
                    -121.6063461303711,
                    2387.0068359375,
                    117.43158721923828,
                    0.0,
                    0.0,
                    81.5907974243164,
                    -37.86930847167969,
                    61.94624710083008,
                    -158.9445343017578,
                    64.07814025878906,
                    80.061279296875,
                    19.922372817993164,
                    152.41758728027344,
                    10.0,
                    0.0,
                    2437.594970703125,
                    -2.680375337600708,
                    2466.10302734375,
                    -121.60626983642578,
                    2386.99853515625,
                    117.43141174316406,
                    0.0,
                    0.0,
                    81.58782196044922,
                    -37.869232177734375,
                    61.94702911376953,
                    -158.94447326660156,
                    64.08131408691406,
                    80.06102752685547,
                    19.918296813964844,
                    152.4265594482422,
                    11.0,
                    0.0,
                    2438.278564453125,
                    -2.687347650527954,
                    2466.067626953125,
                    -121.5904541015625,
                    2385.525146484375,
                    117.4053726196289,
                    0.0,
                    0.0,
                    81.56534576416016,
                    -37.87582778930664,
                    61.947654724121094,
                    -158.9286651611328,
                    64.12057495117188,
                    80.0344009399414,
                    19.923450469970703,
                    152.5112762451172,
                    12.0,
                    0.0,
                    2438.47265625,
                    -2.689340114593506,
                    2466.057861328125,
                    -121.5859603881836,
                    2385.1064453125,
                    117.39796447753906,
                    0.0,
                    0.0,
                    81.55931854248047,
                    -37.87771224975586,
                    61.94794464111328,
                    -158.92416381835938,
                    64.13079833984375,
                    80.02684783935547,
                    19.925472259521484,
                    152.5322723388672,
                    13.0,
                    0.0,
                    2433.296142578125,
                    -2.637334108352661,
                    2466.356689453125,
                    -121.70523834228516,
                    2396.206298828125,
                    117.59488677978516,
                    0.0,
                    0.0,
                    81.73687744140625,
                    -37.82863235473633,
                    61.94107437133789,
                    -159.04335021972656,
                    63.82746124267578,
                    80.22836303710938,
                    19.89933204650879,
                    151.87051391601562,
                    14.0,
                    0.0,
                    2434.94091796875,
                    -2.6539125442504883,
                    2466.259033203125,
                    -121.66728210449219,
                    2392.68115234375,
                    117.53221893310547,
                    0.0,
                    0.0,
                    81.68494415283203,
                    -37.84432601928711,
                    61.942142486572266,
                    -159.0054168701172,
                    63.918601989746094,
                    80.16435241699219,
                    19.91387939453125,
                    152.0661163330078,
                    15.0,
                    0.0,
                    2437.579345703125,
                    -2.6804661750793457,
                    2466.109130859375,
                    -121.60646057128906,
                    2387.02001953125,
                    117.43183898925781,
                    0.0,
                    0.0,
                    81.59453582763672,
                    -37.869388580322266,
                    61.94561004638672,
                    -158.94464111328125,
                    64.0732421875,
                    80.06163024902344,
                    19.927473068237305,
                    152.4031524658203,
                    16.0,
                    0.0,
                    2436.71728515625,
                    -2.671450614929199,
                    2466.149658203125,
                    -121.62655639648438,
                    2388.887451171875,
                    117.46484375,
                    0.0,
                    0.0,
                    81.61653900146484,
                    -37.86078643798828,
                    61.946258544921875,
                    -158.96475219726562,
                    64.03114318847656,
                    80.09520721435547,
                    19.911598205566406,
                    152.3182830810547,
                    17.0,
                    0.0,
                    2436.617431640625,
                    -2.6704823970794678,
                    2466.15625,
                    -121.62882995605469,
                    2389.099853515625,
                    117.46862030029297,
                    0.0,
                    0.0,
                    81.620849609375,
                    -37.859886169433594,
                    61.945838928222656,
                    -158.96702575683594,
                    64.02450561523438,
                    80.09909057617188,
                    19.912391662597656,
                    152.30331420898438,
                    18.0,
                    0.0,
                    2430.76708984375,
                    -2.6124753952026367,
                    2466.52783203125,
                    -121.7632064819336,
                    2401.58642578125,
                    117.69093322753906,
                    0.0,
                    0.0,
                    81.82596588134766,
                    -37.80522537231445,
                    61.93672180175781,
                    -159.10125732421875,
                    63.67887878417969,
                    80.3266830444336,
                    19.891775131225586,
                    151.5442352294922,
                    19.0,
                    0.0,
                    2427.005615234375,
                    -2.575826406478882,
                    2466.8046875,
                    -121.84928131103516,
                    2409.55322265625,
                    117.83380889892578,
                    0.0,
                    0.0,
                    81.95317840576172,
                    -37.77068328857422,
                    61.93101501464844,
                    -159.187255859375,
                    63.46640396118164,
                    80.47277069091797,
                    19.874465942382812,
                    151.08169555664062,
                    20.0,
                    0.0,
                    2425.64306640625,
                    -2.5630483627319336,
                    2466.9208984375,
                    -121.8801498413086,
                    2412.407958984375,
                    117.88533020019531,
                    0.0,
                    0.0,
                    82.00692749023438,
                    -37.758758544921875,
                    61.92658996582031,
                    -159.21804809570312,
                    63.38267135620117,
                    80.52558135986328,
                    19.880481719970703,
                    150.8946075439453,
                    21.0,
                    0.0,
                    2424.295654296875,
                    -2.5502676963806152,
                    2467.03466796875,
                    -121.91078186035156,
                    2415.23583984375,
                    117.93639373779297,
                    0.0,
                    0.0,
                    82.05486297607422,
                    -37.746761322021484,
                    61.92362976074219,
                    -159.24864196777344,
                    63.305423736572266,
                    80.57781982421875,
                    19.87877082824707,
                    150.72503662109375,
                    22.0,
                    0.0,
                    2423.14208984375,
                    -2.539411783218384,
                    2467.1357421875,
                    -121.93695068359375,
                    2417.650634765625,
                    117.98009490966797,
                    0.0,
                    0.0,
                    82.09634399414062,
                    -37.73657989501953,
                    61.9208869934082,
                    -159.27476501464844,
                    63.239227294921875,
                    80.62252044677734,
                    19.878215789794922,
                    150.57957458496094,
                    23.0,
                    0.0,
                    2421.991455078125,
                    -2.528627395629883,
                    2467.239501953125,
                    -121.96304321289062,
                    2420.0546875,
                    118.02367401123047,
                    0.0,
                    0.0,
                    82.13734436035156,
                    -37.72646713256836,
                    61.9182014465332,
                    -159.30081176757812,
                    63.17387008666992,
                    80.6670913696289,
                    19.877296447753906,
                    150.4362030029297,
                    24.0,
                    0.0,
                    2421.520751953125,
                    -2.524101972579956,
                    2467.280029296875,
                    -121.97378540039062,
                    2421.043212890625,
                    118.04156494140625,
                    0.0,
                    0.0,
                    82.15094757080078,
                    -37.72218704223633,
                    61.917537689208984,
                    -159.31155395507812,
                    63.15153121948242,
                    80.68533325195312,
                    19.87200355529785,
                    150.3905487060547]

        dss.monitors_save()

        actual = list()
        for i in dss.monitors_byte_stream().values.tolist():
            for j in i:
                actual.append(j)

        assert actual == expected

    def test_monitors_header(self, dss):
        expected = [' V1', ' VAngle1', ' V2', ' VAngle2', ' V3', ' VAngle3', ' V4', ' VAngle4',
                    ' I1', ' IAngle1', ' I2', ' IAngle2', ' I3', ' IAngle3', ' I4', ' IAngle4\x00']
        actual = dss.monitors_header()
        assert actual == expected

    def test_monitors_dbl_hour(self, dss):
        expected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
        actual = dss.monitors_dbl_hour()
        assert actual == expected

    def test_monitors_dbl_freq(self, dss):
        expected = [0.0]
        actual = dss.monitors_dbl_freq()
        assert actual == expected

    def test_monitors_channel(self, dss):
        expected = [2421.03,
                    2421.12,
                    2421.59,
                    2422.46,
                    2423.02,
                    2423.23,
                    2425.53,
                    2431.14,
                    2437.59,
                    2437.59,
                    2438.28,
                    2438.47,
                    2433.3,
                    2434.94,
                    2437.58,
                    2436.72,
                    2436.62,
                    2430.77,
                    2427.01,
                    2425.64,
                    2424.3,
                    2423.14,
                    2421.99,
                    2421.52]
        # dss.monitors_save_all()
        actual = dss.monitors_channel(1)
        assert [round(value, 2) for value in actual] == [round(value, 2) for value in expected]
