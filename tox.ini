[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

[tox]
# Configure environments to test against multiple Python versions
envlist =
    docs,
    {py311,py312},
    report
ignore_basepython_conflict = true

[testenv:py311]
basepython = py311: {env:TOXPYTHON:python3.11}
    {bootstrap,clean,check,report,codecov}: {env:TOXPYTHON:python3.11}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    SETUPPY_CFLAGS=-DCYTHON_TRACE=1
usedevelop = false
deps =
    pytest
    pytest-cov
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv tests}
	
[testenv:py312]
basepython = py312: {env:TOXPYTHON:python3.12}
    {bootstrap,clean,check,report,codecov}: {env:TOXPYTHON:python3.12}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    SETUPPY_CFLAGS=-DCYTHON_TRACE=1
usedevelop = false
deps =
    pytest
    pytest-cov
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv tests}

[testenv:check]
deps =
    docutils
    check-manifest
    readme-renderer
    pygments
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage
