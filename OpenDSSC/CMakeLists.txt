# CMakeList.txt : CMake project for OpenDSSX, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.15)

project("OpenDSSX" VERSION 0.0.0 DESCRIPTION "OpenDSS-X")

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(Threads)

add_subdirectory(klusolve EXCLUDE_FROM_ALL)
set_target_properties(klusolve_all PROPERTIES
	RUNTIME_OUTPUT_DIRECTORY ".."
)
# Use this variable to define what type of output will be generated by the compiler
if(NOT DEFINED MyOutputType)
	# Allow defining MyOutputType in scripts/CLI.
	# TODO: move to a cached variable later (avoid that so we don't need to update build docs yet)
	set(MyOutputType "DLL") # Output type, DLL or EXE
endif()

if(MyOutputType STREQUAL "EXE")
	add_executable(OpenDSSC
		CMD/OpenDSSC.cpp
		Support/d2c_system.cpp
		Support/d2c_syscurr.cpp
		Support/d2c_sysstring.cpp
		Support/d2c_sysmath.cpp
		Support/d2c_sysdate.cpp
		Support/d2c_sysexcept.cpp
		Support/d2c_sysfile.cpp
		Support/Sysutils.cpp
		Support/d2c_structures.cpp
		Shared/Arraydef.cpp
		Shared/CktTree.cpp
		Shared/Command.cpp
		Shared/Dynamics.cpp
		Shared/InvDynamics.cpp
		Shared/HashList.cpp
		Shared/IniRegSave.cpp
		Shared/LineUnits.cpp
		Shared/mathutil.cpp
		Shared/PointerList.cpp
		Shared/Pstcalc.cpp
		Shared/StackDef.cpp
		Shared/Ucmatrix.cpp
		Shared/Ucomplex.cpp
		Parser/RPN.cpp
		Parser/ParserDel.cpp
		Common/AutoAdd.cpp
		Common/Bus.cpp
		Common/Circuit.cpp
		Common/CktElement.cpp
		Common/Conductor.cpp
		Common/CktElementClass.cpp
		Common/ControlQueue.cpp
		Common/Diakoptics.cpp
		Common/DSSCallBackRoutines.cpp
		Common/DSSClass.cpp
		Common/DSSClassDefs.cpp
		Common/DSSGlobals.cpp
		Common/ExportCIMXML.cpp
		Common/ExportResults.cpp
		Common/Feeder.cpp
		Common/MeTIS_Exec.cpp
		Common/ShowResults.cpp
		Common/Solution.cpp
		Common/SolutionAlgs.cpp
		Common/Sparse_Math.cpp
		Common/Terminal.cpp
		Common/Utilities.cpp
		Common/YMatrix.cpp
		Forms/CmdForms.cpp
		GISCommands/GISCommands.cpp
		Executive/ConnectOptions.cpp
		Executive/ExecCommands.cpp
		Executive/ExecHelper.cpp
		Executive/ExecOptions.cpp
		Executive/Executive.cpp
		Executive/ExportOptions.cpp
		Executive/ShowOptions.cpp
		Executive/PlotOptions.cpp
		Meters/MeterClass.cpp
		Meters/EnergyMeter.cpp
		Meters/fMonitor.cpp
		Meters/MemoryMap_lib.cpp
		Meters/MeterElement.cpp
		Meters/Monitor.cpp
		Meters/ReduceAlgs.cpp
		Meters/Sensor.cpp
		Meters/VLNodeVars.cpp
		Controls/CapControl.cpp
		Controls/CapControlVars.cpp
		Controls/CapUserControl.cpp
		Controls/ControlClass.cpp
		Controls/ControlElem.cpp
		Controls/ESPVLControl.cpp
		Controls/ExpControl.cpp
		Controls/GenDispatcher.cpp
		Controls/InvControl.cpp
		Controls/Recloser.cpp
		Controls/RegControl.cpp
		Controls/Relay.cpp
		Controls/StorageController.cpp
		Controls/SwtControl.cpp
		Controls/UPFCControl.cpp
		PCElements/Equivalent.cpp
		PCElements/generator.cpp
		PCElements/GeneratorVars.cpp
		PCElements/Generic5OrderMach.cpp
		PCElements/GenUserModel.cpp
		PCElements/GICLine.cpp
		PCElements/GICsource.cpp
		PCElements/IndMach012.cpp
		PCElements/Isource.cpp
		PCElements/Load.cpp
		PCElements/PCClass.cpp
		PCElements/PCElement.cpp
		PCElements/PVsystem.cpp
		PCElements/PVSystemUserModel.cpp
		PCElements/Storage.cpp
		PCElements/StorageVars.cpp
		PCElements/StoreUserModel.cpp
		PCElements/UPFC.cpp
		PCElements/vccs.cpp
		PCElements/VSConverter.cpp
		PCElements/VSource.cpp
		PCElements/WindGen.cpp
		PCElements/WindGenUserModel.cpp
		PCElements/WindGenVars.cpp
		PCElements/WTG3_Model.cpp
		PDElements/AutoTrans.cpp
		PDElements/Capacitor.cpp
		PDElements/Fault.cpp
		PDElements/fuse.cpp
		PDElements/GICTransformer.cpp
		PDElements/Line.cpp
		PDElements/PDClass.cpp
		PDElements/PDElement.cpp
		PDElements/Reactor.cpp
		PDElements/Transformer.cpp
		General/CableConstants.cpp
		General/CableData.cpp
		General/CNData.cpp
		General/CNLineConstants.cpp
		General/ConductorData.cpp
		General/DSSObject.cpp
		General/DynamicExp.cpp
		General/GrowthShape.cpp
		General/LineCode.cpp
		General/LineConstants.cpp
		General/LineGeometry.cpp
		General/LineSpacing.cpp
		General/LoadShape.cpp
		General/NamedObject.cpp
		General/OHLineConstants.cpp
		General/PriceShape.cpp
		General/Spectrum.cpp
		General/TCC_Curve.cpp
		General/TempShape.cpp
		General/TSData.cpp
		General/TSLineConstants.cpp
		General/WireData.cpp
		General/XfmrCode.cpp
		General/XYcurve.cpp
		PCElements/PCElement.cpp
		MyOpenDSS/MyDSSClassDefs.cpp 
		GenModels/gencls.cpp
		GenModels/genrou.cpp
		GenControls/Exciter/ExcSexs.cpp
		GenControls/Governor/tgov.cpp
		#Shared/IntegrationMethods.cpp
	    Plot/DSSPlot.cpp
		Plot/DSSGraph.cpp
	 "PCElements/WTG3_Model.h" "PCElements/WTG3_Model.cpp")
else()
	add_library(OpenDSSC SHARED
		DLL/OpenDSSCDLL.cpp
		Support/d2c_system.cpp
		Support/d2c_syscurr.cpp
		Support/d2c_sysstring.cpp
		Support/d2c_sysmath.cpp
		Support/d2c_sysdate.cpp
		Support/d2c_sysexcept.cpp
		Support/d2c_sysfile.cpp
		Support/Sysutils.cpp
		Support/d2c_structures.cpp
		Shared/Arraydef.cpp
		Shared/CktTree.cpp
		Shared/Command.cpp
		Shared/Dynamics.cpp
		Shared/InvDynamics.cpp
		Shared/HashList.cpp
		Shared/IniRegSave.cpp
		Shared/LineUnits.cpp
		Shared/mathutil.cpp
		Shared/PointerList.cpp
		Shared/Pstcalc.cpp
		Shared/StackDef.cpp
		Shared/Ucmatrix.cpp
		Shared/Ucomplex.cpp
		Parser/RPN.cpp
		Parser/ParserDel.cpp
		Common/AutoAdd.cpp
		Common/Bus.cpp
		Common/Circuit.cpp
		Common/CktElement.cpp
		Common/Conductor.cpp
		Common/CktElementClass.cpp
		Common/ControlQueue.cpp
		Common/Diakoptics.cpp
		Common/DSSCallBackRoutines.cpp
		Common/DSSClass.cpp
		Common/DSSClassDefs.cpp
		Common/DSSGlobals.cpp
		Common/ExportCIMXML.cpp
		Common/ExportResults.cpp
		Common/Feeder.cpp
		Common/MeTIS_Exec.cpp
		Common/ShowResults.cpp
		Common/Solution.cpp
		Common/SolutionAlgs.cpp
		Common/Sparse_Math.cpp
		Common/Terminal.cpp
		Common/Utilities.cpp
		Common/YMatrix.cpp
		Forms/CmdForms.cpp
		GISCommands/GISCommands.cpp
		Executive/ConnectOptions.cpp
		Executive/ExecCommands.cpp
		Executive/ExecHelper.cpp
		Executive/ExecOptions.cpp
		Executive/Executive.cpp
		Executive/ExportOptions.cpp
		Executive/ShowOptions.cpp
		Executive/PlotOptions.cpp
		Meters/MeterClass.cpp
		Meters/EnergyMeter.cpp
		Meters/fMonitor.cpp
		Meters/MemoryMap_lib.cpp
		Meters/MeterElement.cpp
		Meters/Monitor.cpp
		Meters/ReduceAlgs.cpp
		Meters/Sensor.cpp
		Meters/VLNodeVars.cpp
		Controls/CapControl.cpp
		Controls/CapControlVars.cpp
		Controls/CapUserControl.cpp
		Controls/ControlClass.cpp
		Controls/ControlElem.cpp
		Controls/ESPVLControl.cpp
		Controls/ExpControl.cpp
		Controls/GenDispatcher.cpp
		Controls/InvControl.cpp
		Controls/Recloser.cpp
		Controls/RegControl.cpp
		Controls/Relay.cpp
		Controls/StorageController.cpp
		Controls/SwtControl.cpp
		Controls/UPFCControl.cpp
		PCElements/Equivalent.cpp
		PCElements/generator.cpp
		PCElements/GeneratorVars.cpp
		PCElements/Generic5OrderMach.cpp
		PCElements/GenUserModel.cpp
		PCElements/GICLine.cpp
		PCElements/GICsource.cpp
		PCElements/IndMach012.cpp
		PCElements/Isource.cpp
		PCElements/Load.cpp
		PCElements/PCClass.cpp
		PCElements/PCElement.cpp
		PCElements/PVsystem.cpp
		PCElements/PVSystemUserModel.cpp
		PCElements/Storage.cpp
		PCElements/StorageVars.cpp
		PCElements/StoreUserModel.cpp
		PCElements/UPFC.cpp
		PCElements/vccs.cpp
		PCElements/VSConverter.cpp
		PCElements/VSource.cpp
		PCElements/WindGen.cpp
		PCElements/WindGenUserModel.cpp
		PCElements/WindGenVars.cpp
		PCElements/WTG3_Model.cpp
		PDElements/AutoTrans.cpp
		PDElements/Capacitor.cpp
		PDElements/Fault.cpp
		PDElements/fuse.cpp
		PDElements/GICTransformer.cpp
		PDElements/Line.cpp
		PDElements/PDClass.cpp
		PDElements/PDElement.cpp
		PDElements/Reactor.cpp
		PDElements/Transformer.cpp
		General/CableConstants.cpp
		General/CableData.cpp
		General/CNData.cpp
		General/CNLineConstants.cpp
		General/ConductorData.cpp
		General/DSSObject.cpp
		General/DynamicExp.cpp
		General/GrowthShape.cpp
		General/LineCode.cpp
		General/LineConstants.cpp
		General/LineGeometry.cpp
		General/LineSpacing.cpp
		General/LoadShape.cpp
		General/NamedObject.cpp
		General/OHLineConstants.cpp
		General/PriceShape.cpp
		General/Spectrum.cpp
		General/TCC_Curve.cpp
		General/TempShape.cpp
		General/TSData.cpp
		General/TSLineConstants.cpp
		General/WireData.cpp
		General/XfmrCode.cpp
		General/XYcurve.cpp
		PCElements/PCElement.cpp
		MyOpenDSS/MyDSSClassDefs.cpp 
		GenModels/gencls.cpp
		GenModels/genrou.cpp
		GenControls/Exciter/ExcSexs.cpp
		GenControls/Governor/tgov.cpp
		#Shared/IntegrationMethods.cpp
		Plot/DSSPlot.cpp
		Plot/DSSGraph.cpp
	  )
endif()

target_compile_options(OpenDSSC PRIVATE
	$<$<CXX_COMPILER_ID:MSVC>:
		# Options for MSVC:
		/permissive-
	>
	$<$<OR:$<CXX_COMPILER_ID:Clang>,$<CXX_COMPILER_ID:GNU>>:
		# Options for Clang or GCC:
		# -fms-extensions
		$<$<CONFIG:Debug>:
			-Wall
			-Wextra
			# These are temporarilly disabled:
			-Wno-unused-variable
			-Wno-unused-parameter
			-Wno-sign-compare
			-Wno-unused-private-field
			-Wno-unused-const-variable

			# Options for Clang-only:
			$<$<CXX_COMPILER_ID:Clang>:
			# Purposefully fill uninitialized variables with a pattern, to help catch errors faster:
			-ftrivial-auto-var-init=pattern
			# Enable Clang's Address Sanitizer: https://clang.llvm.org/docs/AddressSanitizer.html
			-fsanitize=address
			$<$<VERSION_GREATER_EQUAL:${CMAKE_CXX_COMPILER_VERSION},13.0.0>:
			-fsanitize-address-use-after-return=always
			>
			-fsanitize-address-use-after-scope
			# Strive for understandable stack traces by disabling a few optimizations:
			-fno-omit-frame-pointer
			-fno-inline-functions
			-fno-optimize-sibling-calls
			>
		>
	>
)
target_link_options(OpenDSSC PRIVATE
	$<$<CXX_COMPILER_ID:Clang>:
		$<$<CONFIG:Debug>:
			# Clang's Address Sanitizer also needs this link switch: https://clang.llvm.org/docs/AddressSanitizer.html
			# -fsanitize=address
		>
	>
)
target_compile_features(OpenDSSC PUBLIC
# Require C11 support when we're compiling C code.
	c_std_11
# Require C++11 for std::filesystem.  (If C++11 support is needed, use Boost.)
	cxx_std_11
)
# Disallowing extensions would help check the code for compatibility with other compilers:
#set_property(OpenDSSC tgt PROPERTY CXX_EXTENSIONS OFF)

if(MSVC)
message("Platform assumption: Microsoft Visual C++ (or compatible)")
# Regarding DECLSPEC_[23]D, Clang doesn't want extra []'s for multi-dimensional
# __declspec getters & putters.
target_compile_definitions(OpenDSSC PRIVATE
	DECLSPEC_2D=[]
	DECLSPEC_3D=[][]
)
target_compile_options(OpenDSSC PRIVATE
	#/fsanitize=address 
)
else()
message("Platform assumption: Linux or UNIX")
# Regarding DECLSPEC_[23]D, Visual C++ wants extra []'s for multi-dimensional
# __declspec getters & putters.
#
# Define _D2C_SYSFILE_H_LONG_IS_INT64 if long is the same as int64_t for d2c_sysfile.{h,cpp}
# TODO: How may _D2C_SYSFILE_H_LONG_IS_INT64 be checked at compile time?  The
# cleanest way would be to rewrite that mess with a few C++ templates.
#
# _COMPLEX_DEFINED is to prevent klusolve.h from defining complex with a
# conflicting set of names.
target_compile_definitions(OpenDSSC PRIVATE
	_D2C_SYSFILE_H_LONG_IS_INT64
	_COMPLEX_DEFINED
)
endif()

target_include_directories(OpenDSSC PRIVATE
	Common
	Controls
	Executive
	Forms
	General
	GISCommands
	Meters
	MyOpenDSS
	Parser
	PCElements
	PDElements
	Shared
	Support
	MyOpenDSS
	GenModels
	GenControls/Exciter
	GenControls/Governor
	Plot
)

if((MSVC) OR (MINGW))
# Windows:
target_link_libraries(OpenDSSC
	${CMAKE_THREAD_LIBS_INIT}
	klusolve_all
)
else()
# Linux:
target_link_libraries(OpenDSSC
	${CMAKE_THREAD_LIBS_INIT}
	klusolve_all
	stdc++fs
	dl
	uuid
	# iconv # iconv seems to be required on more recent compilers
)
endif()

# TODO: Add tests and install targets if needed.
install (TARGETS OpenDSSC DESTINATION "openDSSX/bin")
